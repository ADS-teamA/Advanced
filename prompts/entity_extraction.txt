Extract structured entities from the following legal document text.

**Task**: Identify and extract all entities of the following types:
{entity_types_str}

**Entity Types**:
- standard: Standards like "GRI 306", "ISO 14001", "GRI 303: Water and Effluents 2018"
- organization: Organizations like "GSSB", "Global Reporting Initiative", "ISO"
- date: Dates like "2018-07-01", "1 July 2018", "July 2018"
- clause: Specific clauses like "Disclosure 306-3", "Section 8.2", "Requirement 303-1-a"
- topic: Topics like "waste management", "water", "effluents", "emissions"
- regulation: Regulations like "GDPR", "CCPA", "Basel Convention"
- contract: Contracts like "Master Service Agreement", "NDA"
- person: People like "Jane Smith", "Dr. John Doe"
- location: Locations like "European Union", "California", "United States"

**Document Text**:
{chunk_content}

**Metadata Context**:
- Section: {section_path}
- Document ID: {document_id}

**Output Format** (JSON array):
[
  {{
    "type": "standard",
    "value": "GRI 306: Effluents and Waste 2016",
    "normalized_value": "GRI 306",
    "confidence": 0.95,
    "context": "This Standard supersedes GRI 306: Effluents and Waste 2016."
  }},
  {{
    "type": "date",
    "value": "1 July 2018",
    "normalized_value": "2018-07-01",
    "confidence": 0.9,
    "context": "It includes revisions effective on 1 July 2018."
  }}
]

**Instructions**:
1. Extract ALL entities of the specified types
2. For each entity, provide:
   - type: Entity type (one of the types above)
   - value: Original text as it appears in the document
   - normalized_value: Standardized form (e.g., "GRI 306" for "GRI 306: Effluents and Waste 2016")
   - confidence: Extraction confidence (0.0-1.0)
   - context: Brief surrounding context (max 150 chars)
3. Normalize entity values:
   - Standards: Extract base identifier (e.g., "GRI 306")
   - Dates: Convert to ISO format (YYYY-MM-DD)
   - Organizations: Use official name
4. Only include entities with confidence >= {min_confidence}
5. Limit to {max_entities_per_chunk} entities
6. Return valid JSON array

{few_shot_examples}

**Output** (JSON array only, no other text):